events {
  worker_connections  4096;  ## Default: 1024
}

http {
  resolver 127.0.0.11;
  server_tokens off;

  server {
      listen 80;
      server_name ${hostname};
      location / {
          return 301 https://$host$request_uri;
      }
  }
  server {
      listen 443 ssl;
      server_name ${hostname};

      ssl_certificate /etc/letsencrypt/server.crt;
      ssl_certificate_key /etc/letsencrypt/server.key;

      include /etc/letsencrypt/options-ssl-nginx.conf;
      ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

      location / {
          return 301 https://$host/app;
      }

      location /api {
          proxy_http_version 1.1;

          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection 'upgrade';
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;

          proxy_cache_bypass $http_upgrade;

          rewrite /api/(.*) /$1  break;

          proxy_pass http://backend:3000/;
          proxy_redirect     off;
      }

      location /app {
          proxy_http_version 1.1;

          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection 'upgrade';
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;

          proxy_cache_bypass $http_upgrade;

          rewrite /app/(.*) /$1  break;

          proxy_pass http://frontend:80/;
          proxy_redirect     off;
      }
  }
}
stream {
  resolver 127.0.0.11;

  server {
      server_name ${hostname};
      listen 8883;
      proxy_pass backend:1883;
  }
}
